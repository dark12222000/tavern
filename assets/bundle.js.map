{"version":3,"file":"bundle.js","sources":["webpack:///webpack/bootstrap 1963fe47ae5dfcb7370f","webpack:///./js/core/ui.js","webpack:///./js/core/Tavern.js","webpack:///./js/data/TavernData.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1963fe47ae5dfcb7370f\n **/","'use strict';\n\nvar _Tavern = require('./Tavern.js');\n\nvar _Tavern2 = _interopRequireDefault(_Tavern);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addResult(tavern) {\n  $('#results').append('\\n  <div class=\"\">\\n    <h3>' + tavern.name + '</h3>\\n    <i>' + tavern.wealth + '</i>\\n    <table class=\"u-full-width\">\\n      <thead><tr><th>Item</th><th>Quality</th><th>Price</th></tr></thead>\\n      <tbody>' + tavern.formatMenuAsTbody() + '</tbody>\\n    </table>\\n  </div>');\n\n  $('#results').animate({ scrollTop: $('#results').height() + 10000 }, \"slow\");\n}\n\nfunction generateTavern() {\n  return addResult(new _Tavern2.default());\n}\n\nwindow.generateTavern = generateTavern;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/core/ui.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _TavernData = require('./../data/TavernData.js');\n\nvar _TavernData2 = _interopRequireDefault(_TavernData);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n'use strict';\n/* jshint esnext: true */\n\nvar Tavern = function () {\n  function Tavern() {\n    var _this = this;\n\n    _classCallCheck(this, Tavern);\n\n    this.name = this.generateName();\n    this.wealth = this.generateWealth();\n    this.menu = this.generateMenu();\n    this.formatMenuAsTbody = function () {\n      var output = '';\n      _this.menu.forEach(function (item) {\n        output += '<tr><td>' + item.name + '</td><td>(' + item.quality + ')</td><td>' + _this.priceFormatter(Number(item.price)) + '</td></tr>';\n      });\n      return output;\n    };\n  }\n\n  _createClass(Tavern, [{\n    key: 'generateName',\n    value: function generateName() {\n      var getWord = _.flow(_.sample, _.capitalize);\n      var nameGenerators = [function () {\n        return 'The ' + getWord(_TavernData2.default.descriptors) + ' ' + getWord(_TavernData2.default.animals);\n      }, function () {\n        return 'The ' + getWord(_TavernData2.default.descriptors) + ' ' + getWord(_TavernData2.default.objects);\n      }, function () {\n        return 'The ' + getWord(_TavernData2.default.objects) + ' and ' + getWord(_TavernData2.default.animals);\n      }];\n\n      return _.sample(nameGenerators)();\n    }\n  }, {\n    key: 'generateWealth',\n    value: function generateWealth() {\n      var wealth = _.random(0, 500);\n      var levels = [{ name: 'wretched', wealth: 100 }, { name: 'squalid', wealth: 200 }, { name: 'poor', wealth: 300 }, { name: 'modest', wealth: 400 }, { name: 'comfortable', wealth: 450 }, { name: 'wealthy', wealth: 490 }];\n      var level = _.find(levels, function (level) {\n        return level.wealth >= wealth;\n      });\n      if (level.name) {\n        return level.name;\n      } else {\n        return 'squalid';\n      }\n    }\n  }, {\n    key: 'generateMenu',\n    value: function generateMenu() {\n      var wealthModifiers = {\n        wretched: 0.2,\n        squalid: 0.3,\n        poor: 0.4,\n        modest: 0.5,\n        comfortable: 0.75,\n        wealthy: 0.9\n      };\n      var qualityModifiers = {\n        horrid: 0.2,\n        poor: 0.3,\n        serviceable: 0.5,\n        decent: 0.7,\n        fine: 1.0\n      };\n\n      var modifier = wealthModifiers[this.wealth];\n\n      var menu = [];\n\n      function runMenu() {\n        var items = _TavernData2.default.menuItems.map(function (item) {\n          var chance = Math.random();\n          var itemEntry = {};\n          if (item.weight * modifier * chance >= 1) {\n            var _ret = function () {\n              itemEntry.name = item.name;\n              var qual = _.random(0, 2) * modifier;\n              itemEntry.quality = _.findKey(qualityModifiers, function (modifier) {\n                return modifier >= qual;\n              });\n              if (!itemEntry.quality) itemEntry.quality = 'poor';\n              var basePrice = item.price || 0.02;\n              itemEntry.price = Number(basePrice) * Number(qualityModifiers[itemEntry.quality]);\n              itemEntry.price = itemEntry.price.toFixed(2);\n              if (itemEntry.price < 0.01) itemEntry.price = 0.01;\n              console.log(itemEntry);\n              return {\n                v: itemEntry\n              };\n            }();\n\n            if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n          } else {\n            return false;\n          }\n        });\n        return items.filter(function (item) {\n          return item !== false;\n        });\n      }\n\n      //always have at least three items\n      while (menu.length < 3) {\n        menu = runMenu();\n      }\n\n      return menu;\n    }\n  }, {\n    key: 'priceFormatter',\n    value: function priceFormatter(price) {\n      var format = {\n        pp: 0,\n        gp: 0,\n        sp: 0,\n        cp: 0\n      };\n\n      format.cp = price % 0.1 * 100;\n      format.sp = (price % 1).toFixed(1) * 10;\n      format.gp = Math.round(price % 10);\n      format.pp = Math.round(price / 10) * (price * 10);\n      console.log(price, format);\n      if (format.pp === 0) delete format.pp;\n      if (format.gp === 0) delete format.gp;\n      if (format.sp === 0) delete format.sp;\n      if (format.cp === 0) delete format.cp;\n\n      var str = '';\n      _.keys(format).forEach(function (key) {\n        str = Number(format[key]) + key;\n      });\n      return str;\n    }\n  }]);\n\n  return Tavern;\n}();\n\nexports.default = Tavern;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/core/Tavern.js\n ** module id = 1\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  animals: [\"Aardwolf\", \"Albatross\", \"Alligator\", \"Alpaca\", \"Anaconda\", \"Angelfish\", \"Anglerfish\", \"Ant\", \"Anteater\", \"Antelope\", \"Antlion\", \"Ape\", \"Aphid\", \"Armadillo\", \"Asp\", \"***\", \"Baboon\", \"Badger\", \"Bandicoot\", \"Barnacle\", \"Basilisk\", \"Barracuda\", \"Bass\", \"Bat\", \"Bear\", \"Beaver\", \"Bedbug\", \"Bee\", \"Beetle\", \"Bird\", \"Bison\", \"Boa\", \"Bobcat\", \"Bobolink\", \"Bonobo\", \"Booby\", \"Bovid\", \"Buffalo\", \"Bug\", \"Bulldog\", \"Butterfly\", \"Buzzard\", \"Camel\", \"Canid\", \"Cardinal\", \"Caribou\", \"Carp\", \"Cat\", \"Caterpillar\", \"Catfish\", \"Centipede\", \"Cephalopod\", \"Chameleon\", \"Cheetah\", \"Chickadee\", \"Chicken\", \"Chihuahua\", \"Chimpanzee\", \"Chinchilla\", \"Chipmunk\", \"Clam\", \"Clownfish\", \"Cobra\", \"Cockroach\", \"Cod\", \"Collie\", \"Condor\", \"Constrictor\", \"Coral\", \"Cougar\", \"Cow\", \"Coyote\", \"Crab\", \"Crane\", \"Crawdad\", \"Crayfish\", \"Cricket\", \"Crocodile\", \"Crow\", \"Cuckoo\", \"Damselfly\", \"Deer\", \"Dingo\", \"Dinosaur\", \"Dog\", \"Dolphin\", \"Donkey\", \"Dormouse\", \"Dove\", \"Dragonfly\", \"Duck\", \"Eagle\", \"Earthworm\", \"Earwig\", \"Echidna\", \"Eel\", \"Egret\", \"Elephant\", \"Elk\", \"Emu\", \"Ermine\", \"Falcon\", \"Ferret\", \"Finch\", \"Firefly\", \"Fish\", \"Flamingo\", \"Flea\", \"Fly\", \"Flyingfish\", \"Fowl\", \"Fox\", \"Frog\", \"Gazelle\", \"Gecko\", \"Gerbil\", \"Gibbon\", \"Guanaco\", \"Guineafowl\", \"Giraffe\", \"Goat\", \"Goldfinch\", \"Goldfish\", \"Goose\", \"Gopher\", \"Gorilla\", \"Grasshopper\", \"Greyhound\", \"Grouse\", \"Gull\", \"Guppy\", \"Haddock\", \"Halibut\", \"Hamster\", \"Hare\", \"Harrier\", \"Hawk\", \"Hedgehog\", \"Heron\", \"Herring\", \"Hippopotamus\", \"Hookworm\", \"Hornet\", \"Horse\", \"Hound\", \"Human\", \"Hummingbird\", \"Husky\", \"Hyena\", \"Iguana\", \"Impala\", \"Insect\", \"Jackal\", \"Jaguar\", \"Jay\", \"Jellyfish\", \"Kangaroo\", \"Kingfisher\", \"Kite\", \"Kiwi\", \"Koala\", \"Koi\", \"Krill\", \"Ladybug\", \"Lamprey\", \"Lark\", \"Leech\", \"Lemming\", \"Lemur\", \"Leopard\", \"Leopon\", \"Liger\", \"Lion\", \"Lizard\", \"Llama\", \"Lobster\", \"Locust\", \"Loon\", \"Louse\", \"Lungfish\", \"Lynx\", \"Macaw\", \"Mackerel\", \"Magpie\", \"Mammal\", \"Mammoth\", \"Marlin\", \"Marmoset\", \"Marmot\", \"Marsupial\", \"Marten\", \"Mastiff\", \"Mastodon\", \"Meadowlark\", \"Meerkat\", \"Mink\", \"Minnow\", \"Mite\", \"Mockingbird\", \"Mole\", \"Mollusk\", \"Mongoose\", \"Monkey\", \"Moose\", \"Mosquito\", \"Moth\", \"Mouse\", \"Mule\", \"Muskox\", \"Mussel\", \"Narwhal\", \"Newt\", \"Nightingale\", \"Ocelot\", \"Octopus\", \"Opossum\", \"Orangutan\", \"Orca\", \"Ostrich\", \"Otter\", \"Owl\", \"Ox\", \"Oyster\", \"Panda\", \"Panther\", \"Parakeet\", \"Parrot\", \"Parrotfish\", \"Partridge\", \"Peacock\", \"Peafowl\", \"Pekingese\", \"Pelican\", \"Penguin\", \"Perch\", \"Pheasant\", \"Pig\", \"Pigeon\", \"Pike\", \"Pinniped\", \"Piranha\", \"Planarian\", \"Platypus\", \"Pony\", \"Poodle\", \"Porcupine\", \"Porpoise\", \"Possum\", \"Prawn\", \"Primate\", \"Puffin\", \"Puma\", \"Python\", \"Quail\", \"Rabbit\", \"Raccoon\", \"Rat\", \"Rattlesnake\", \"Raven\", \"Reindeer\", \"Rhinoceros\", \"Roadrunner\", \"Robin\", \"Rodent\", \"Rook\", \"Rooster\", \"Roundworm\", \"Sailfish\", \"Salamander\", \"Salmon\", \"Sawfish\", \"Scallop\", \"Scorpion\", \"Seahorse\", \"Setter\", \"Shark\", \"Sheep\", \"Shrew\", \"Shrimp\", \"Silkworm\", \"Silverfish\", \"Skink\", \"Skunk\", \"Sloth\", \"Slug\", \"Smelt\", \"Snail\", \"Snake\", \"Snipe\", \"Sole\", \"Spaniel\", \"Sparrow\", \"Spider\", \"Spoonbill\", \"Squid\", \"Squirrel\", \"Starfish\", \"Stingray\", \"Stoat\", \"Stork\", \"Sturgeon\", \"Swallow\", \"Swan\", \"Swift\", \"Swordfish\", \"Swordtail\", \"Tahr\", \"Takin\", \"Tapeworm\", \"Tapir\", \"Tarantula\", \"Termite\", \"Tern\", \"Terrier\", \"Thrush\", \"Tick\", \"Tiger\", \"Tigon\", \"Toad\", \"Tortoise\", \"Toucan\", \"Trout\", \"Tuna\", \"Turkey\", \"Turtle\", \"Tyrannosaurus\", \"Urial\", \"Viper\", \"Vole\", \"Vulture\", \"Wallaby\", \"Walrus\", \"Wasp\", \"Warbler\", \"Weasel\", \"Whale\", \"Whitefish\", \"Wildcat\", \"Wildebeest\", \"Wildfowl\", \"Wolf\", \"Wolverine\", \"Wombat\", \"Woodpecker\", \"Worm\", \"Wren\", \"Yak\", \"Zebra\"],\n  descriptors: [\"accessible\", \"active\", \"adaptable\", \"admirable\", \"adventurous\", \"agreeable\", \"alert\", \"allocentric\", \"amiable\", \"anticipative\", \"appreciative\", \"articulate\", \"aspiring\", \"athletic\", \"attractive\", \"balanced\", \"benevolent\", \"brilliant\", \"calm\", \"capable\", \"captivating\", \"caring\", \"challenging\", \"charismatic\", \"charming\", \"cheerful\", \"clean\", \"clever\", \"colorful\", \"companionly\", \"compassionate\", \"conciliatory\", \"confident\", \"conscientious\", \"considerate\", \"constant\", \"contemplative\", \"cooperative\", \"courageous\", \"courteous\", \"creative\", \"cultured\", \"curious\", \"daring\", \"debonair\", \"decent\", \"decisive\", \"dedicated\", \"deep\", \"dignified\", \"directed\", \"disciplined\", \"discreet\", \"dramatic\", \"dutiful\", \"dynamic\", \"earnest\", \"ebullient\", \"educated\", \"efficient\", \"elegant\", \"eloquent\", \"empathetic\", \"energetic\", \"enthusiastic\", \"esthetic\", \"exciting\", \"extraordinary\", \"fair\", \"faithful\", \"farsighted\", \"felicific\", \"firm\", \"flexible\", \"focused\", \"forecful\", \"forgiving\", \"forthright\", \"freethinking\", \"friendly\", \"gallant\", \"generous\", \"gentle\", \"genuine\", \"gracious\", \"hardworking\", \"healthy\", \"hearty\", \"helpful\", \"herioc\", \"honest\", \"honorable\", \"humble\", \"humorous\", \"idealistic\", \"imaginative\", \"impressive\", \"incisive\", \"incorruptible\", \"independent\", \"individualistic\", \"innovative\", \"inoffensive\", \"insightful\", \"insouciant\", \"intelligent\", \"intuitive\", \"invulnerable\", \"kind\", \"knowledge\", \"leaderly\", \"leisurely\", \"liberal\", \"logical\", \"lovable\", \"loyal\", \"lyrical\", \"magnanimous\", \"masculine\", \"mature\", \"methodical\", \"maticulous\", \"moderate\", \"modest\", \"neat\", \"nonauthoritarian\", \"objective\", \"observant\", \"open\", \"optimistic\", \"orderly\", \"organized\", \"original\", \"painstaking\", \"passionate\", \"patient\", \"patriotic\", \"peaceful\", \"perceptive\", \"perfectionist\", \"personable\", \"persuasive\", \"planful\", \"playful\", \"polished\", \"popular\", \"practical\", \"precise\", \"principled\", \"profound\", \"protean\", \"protective\", \"providential\", \"prudent\", \"punctual\", \"pruposeful\", \"rational\", \"realistic\", \"reflective\", \"relaxed\", \"reliable\", \"resourceful\", \"respectful\", \"responsible\", \"responsive\", \"reverential\", \"romantic\", \"rustic\", \"sage\", \"sane\", \"scholarly\", \"scrupulous\", \"secure\", \"selfless\", \"sensitive\", \"sentimental\", \"seraphic\", \"serious\", \"sexy\", \"sharing\", \"shrewd\", \"simple\", \"skillful\", \"sober\", \"sociable\", \"solid\", \"sophisticated\", \"spontaneous\", \"sporting\", \"stable\", \"steadfast\", \"steady\", \"stoic\", \"strong\", \"studious\", \"suave\", \"subtle\", \"sweet\", \"sympathetic\", \"systematic\", \"tasteful\", \"teacherly\", \"thorough\", \"tidy\", \"tolerant\", \"tractable\", \"trusting\", \"uncomplaining\", \"understanding\", \"undogmatic\", \"unfoolable\", \"upright\", \"urbane\", \"venturesome\", \"vivacious\", \"warm\", \"winning\", \"wise\", \"witty\", \"youthful\", \"absentminded\", \"aggressive\", \"ambitious\", \"amusing\", \"artful\", \"ascetic\", \"authoritarian\", \"boyish\", \"breezy\", \"businesslike\", \"busy\", \"casual\", \"crebral\", \"chummy\", \"circumspect\", \"competitive\", \"complex\", \"confidential\", \"conservative\", \"contradictory\", \"crisp\", \"cute\", \"deceptive\", \"determined\", \"dominating\", \"dreamy\", \"driving\", \"droll\", \"dry\", \"earthy\", \"effeminate\", \"emotional\", \"enigmatic\", \"experimental\", \"familial\", \"folksy\", \"formal\", \"freewheeling\", \"frugal\", \"glamorous\", \"guileless\", \"huried\", \"hypnotic\", \"iconoclastic\", \"idiosyncratic\", \"impassive\", \"impersonal\", \"impressionable\", \"intense\", \"invisible\", \"irreligious\", \"irreverent\", \"maternal\", \"mellow\", \"modern\", \"moralistic\", \"mystical\", \"neutral\", \"noncommittal\", \"noncompetitive\", \"obedient\", \"ordinary\", \"outspoken\", \"paternalistic\", \"physical\", \"placid\", \"political\", \"predictable\", \"preoccupied\", \"private\", \"progressive\", \"proud\", \"pure\", \"questioning\", \"quiet\", \"religious\", \"reserved\", \"restrained\", \"retiring\", \"sarcastic\", \"sensual\", \"skeptical\", \"smooth\", \"soft\", \"solemn\", \"solitary\", \"stern\", \"stoiid\", \"strict\", \"stubborn\", \"stylish\", \"subjective\", \"surprising\", \"soft\", \"tough\", \"unaggressive\", \"unambitious\", \"unceremonious\", \"unchanging\", \"undemanding\", \"unfathomable\", \"unhurried\", \"uninhibited\", \"unpatriotic\", \"unpredicatable\", \"unreligious\", \"unsentimental\", \"whimsical\", \"abrasive\", \"abrupt\", \"agonizing\", \"aimless\", \"airy\", \"aloof\", \"amoral\", \"angry\", \"anxious\", \"apathetic\", \"arbitrary\", \"argumentative\", \"arrogantt\", \"artificial\", \"asocial\", \"assertive\", \"astigmatic\", \"barbaric\", \"bewildered\", \"bizarre\", \"bland\", \"blunt\", \"biosterous\", \"brittle\", \"brutal\", \"calculating\", \"callous\", \"cantakerous\", \"careless\", \"cautious\", \"charmless\", \"childish\", \"clumsy\", \"coarse\", \"cold\", \"colorless\", \"complacent\", \"complaintive\", \"compulsive\", \"conceited\", \"condemnatory\", \"conformist\", \"confused\", \"contemptible\", \"conventional\", \"cowardly\", \"crafty\", \"crass\", \"crazy\", \"criminal\", \"critical\", \"crude\", \"cruel\", \"cynical\", \"decadent\", \"deceitful\", \"delicate\", \"demanding\", \"dependent\", \"desperate\", \"destructive\", \"devious\", \"difficult\", \"dirty\", \"disconcerting\", \"discontented\", \"discouraging\", \"discourteous\", \"dishonest\", \"disloyal\", \"disobedient\", \"disorderly\", \"disorganized\", \"disputatious\", \"disrespectful\", \"disruptive\", \"dissolute\", \"dissonant\", \"distractible\", \"disturbing\", \"dogmatic\", \"domineering\", \"dull\", \"egocentric\", \"enervated\", \"envious\", \"erratic\", \"escapist\", \"excitable\", \"expedient\", \"extravagant\", \"extreme\", \"faithless\", \"false\", \"fanatical\", \"fanciful\", \"fatalistic\", \"fawning\", \"fearful\", \"fickle\", \"fiery\", \"fixed\", \"flamboyant\", \"foolish\", \"forgetful\", \"fraudulent\", \"frightening\", \"frivolous\", \"gloomy\", \"graceless\", \"grand\", \"greedy\", \"grim\", \"gullible\", \"hateful\", \"haughty\", \"hedonistic\", \"hesitant\", \"hidebound\", \"hostile\", \"ignorant\", \"imitative\", \"impatient\", \"impractical\", \"imprudent\", \"impulsive\", \"inconsiderate\", \"incurious\", \"indecisive\", \"indulgent\", \"inert\", \"inhibited\", \"insecure\", \"insensitive\", \"insincere\", \"insulting\", \"intolerant\", \"irascible\", \"irrational\", \"irresponsible\", \"irritable\", \"lazy\", \"libidinous\", \"loquacious\", \"malicious\", \"mannered\", \"mannerless\", \"mawkish\", \"mealymouthed\", \"mechanical\", \"meddlesome\", \"melancholic\", \"meretricious\", \"messy\", \"miserable\", \"miserly\", \"misguided\", \"mistaken\", \"monstrous\", \"moody\", \"morbid\", \"naive\", \"narcissistic\", \"narrow\", \"natty\", \"negativistic\", \"neglectful\", \"neurotic\", \"nihilistic\", \"obnoxious\", \"obsessive\", \"obvious\", \"odd\", \"offhand\", \"opinionated\", \"opportunistic\", \"oppressed\", \"outrageous\", \"overimaginative\", \"paranoid\", \"passive\", \"pedantic\", \"perverse\", \"petty\", \"pharissical\", \"phlegmatic\", \"plodding\", \"pompous\", \"possessive\", \"predatory\", \"prejudiced\", \"presumptuous\", \"pretentious\", \"prim\", \"procrastinating\", \"profligate\", \"provocative\", \"pugnacious\", \"puritanical\", \"quirky\", \"reactionary\", \"reactive\", \"regimental\", \"regretful\", \"repentant\", \"repressed\", \"resentful\", \"ridiculous\", \"rigid\", \"ritualistic\", \"rowdy\", \"ruined\", \"sadistic\", \"sanctimonious\", \"scheming\", \"scornful\", \"secretive\", \"sedentary\", \"selfish\", \"shallow\", \"shortsighted\", \"shy\", \"silly\", \"sloppy\", \"slow\", \"sly\", \"softheaded\", \"sordid\", \"steely\", \"stiff\", \"stupid\", \"submissive\", \"superficial\", \"superstitious\", \"suspicious\", \"tactless\", \"tasteless\", \"tense\", \"thievish\", \"thoughtless\", \"timid\", \"transparent\", \"treacherous\", \"trendy\", \"troublesome\", \"unappreciative\", \"uncaring\", \"uncharitable\", \"unconvincing\", \"uncooperative\", \"uncreative\", \"uncritical\", \"unctuous\", \"undisciplined\", \"unfriendly\", \"ungrateful\", \"unhealthy\", \"unimaginative\", \"unimpressive\", \"unlovable\", \"unpolished\", \"unprincipled\", \"unrealistic\", \"unreflective\", \"unreliable\", \"unrestrained\", \"unstable\", \"vacuous\", \"vague\", \"venal\", \"venomous\", \"vindictive\", \"vulnerable\", \"weak\", \"willful\", \"wishful\", \"zany\"],\n  objects: ['canteen', 'fire', 'flag', 'fork', 'goblet', 'knife', 'mug', 'pole', 'spoon', 'stein', 'sword', 'spear', 'knife', 'dagger', 'rapier', 'halberd', 'pike', 'shield', 'apple', 'pint', 'rapier', 'plate', 'bowl', 'candle', 'lantern', 'hearth', 'flame', 'book', 'scroll', 'potion', 'medic', 'copper', 'nail', 'sieve', 'castle', 'tower', 'mountain', 'flagstaff', 'breastplate', 'bodkin', 'arrow', 'bolt', 'net', 'vial', 'shovel', 'hatchet', 'pick'],\n  menuItems: [{ name: 'Ale', weight: 8.0, price: 0.02 }, { name: 'Lager', weight: 6.0, price: 0.03 }, { name: 'Stout', weight: 2.0, price: 0.04 }, { name: 'Mead', weight: 6.0, price: 0.01 }, { name: 'Cherry Mead', weight: 1.0, price: 0.10 }, { name: 'Cider', weight: 3.0, price: 0.08 }, { name: 'Rum', weight: 1.0, price: 0.1 }, { name: 'Wine', weight: 4.0, price: 0.1 }, { name: 'Hooch', weight: 1.5, price: 0.05 }]\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/data/TavernData.js\n ** module id = 2\n ** module chunks = 0\n **/"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClhKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;","sourceRoot":""}